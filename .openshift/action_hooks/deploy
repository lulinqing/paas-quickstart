#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.


SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")
source "$SCRIPT_DIR/openshift_vars.sh"

if [ ! -d "$OPENSHIFT_DATA_DIR/strongloop/buildpack" ]; then
  mkdir -p "$OPENSHIFT_DATA_DIR/strongloop"
  pushd "$OPENSHIFT_DATA_DIR/strongloop" > /dev/null
  git clone "$github_repo" buildpack
  popd > /dev/null
fi


#  Source StrongLoop shell utility functions.
source "$OPENSHIFT_DATA_DIR/strongloop/buildpack/lib/utils.sh"

#  Autodetect platform.
autodetect_platform

#  On slave/serving gears, need to ensure StrongLoop Node is installed as
#  part of deploy.
#
#  Ensure StrongLoop Node version is installed. You can either pass a
#  StrongLoop Node version here or then you can edit the strongloop/VERSION
#  marker file. If no version is specified, the version in the marker file
#  if any is used or then the default StrongLoop Node version is installed.
echo ""
install_strongloop_node "$install_dir" "$cache_dir"

#  Install any package dependencies.
[ -z "$TMPDIR" ] && export TMPDIR="/tmp"
srcdir="$OPENSHIFT_REPO_DIR"
instdir="$OPENSHIFT_DATA_DIR"
install_package_dependencies "$srcdir" "$cache_dir" "$instdir"

